public class Triangular extends Shape{
    private double a1;
    private double a2;
    private double b1;
    private double b2;
    private double c1;
    private double c2;
    Point a;
    Point b;
    Point c;

    public Triangular(double a1, double a2, double b1, double b2, double c1, double c2) {
        this.a1 = a1;
        this.a2 = a2;
        this.b1 = b1;
        this.b2 = b2;
        this.c1 = c1;
        this.c2 = c2;
        a=new Point(this.a1,this.a2);
        b=new Point(this.b1,this.b2);
        c=new Point(this.c1,this.c2);
    }

    @Override
        double calculatePerimetr(){
            return Math.sqrt(Math.pow(a.getX()-b.getX(),2)+Math.pow(a.getY()-b.getY(),2))+
                    Math.sqrt(Math.pow(c.getX()-b.getX(),2)+Math.pow(c.getY()-b.getY(),2))+
                    Math.sqrt(Math.pow(a.getX()-c.getX(),2)+Math.pow(a.getY()-c.getY(),2));
        }
        @Override
        double calculateArea(){
        double n=calculatePerimetr();
            double polP=n/2;
           return Math.sqrt(polP*(polP-Math.sqrt(Math.pow(a.getX()-b.getX(),2)+Math.pow(a.getY()-b.getY(),2)))*
                   (polP-Math.sqrt(Math.pow(c.getX()-b.getX(),2)+Math.pow(c.getY()-b.getY(),2)))*
                   (polP- Math.sqrt(Math.pow(a.getX()-c.getX(),2)+Math.pow(a.getY()-c.getY(),2))));
 }

    public double getA1() {
        return a1;
    }

    public double getA2() {
        return a2;
    }

    public double getB1() {
        return b1;
    }

    public double getB2() {
        return b2;
    }

    public double getC1() {
        return c1;
    }

    public double getC2() {
        return c2;
    }

    public void setA1(double a1) {
        this.a1 = a1;
    }

    public void setA2(double a2) {
        this.a2 = a2;
    }

    public void setB1(double b1) {
        this.b1 = b1;
    }

    public void setB2(double b2) {
        this.b2 = b2;
    }

    public void setC1(double c1) {
        this.c1 = c1;
    }

    public void setC2(double c2) {
        this.c2 = c2;
    }
}
